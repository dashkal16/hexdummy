plugins {
    id "platform-conventions"
}

platformConventions {
    platform = "fabric"
    shadowProjectConfiguration = "transformProductionFabric"
    mavenPublication = "mavenFabric"
}

architectury {
    fabric()
}

configurations {
    developmentFabric.extendsFrom common
}

dependencies {
    // Loaders and base APIs
    modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"
    modApi "net.fabricmc.fabric-api:fabric-api:${fabricApiVersion}"
    modImplementation("net.fabricmc:fabric-language-kotlin:${project.fabricKotlinVersion}")
    modApi("dev.architectury:architectury-fabric:${architecturyVersion}") {
        // Fix for the "two fabric loaders" loading crash
        exclude group: "net.fabricmc", module: "fabric-loader"
    }

    // Hex Casting stuff
    modImplementation("at.petra-k.hexcasting:hexcasting-fabric-${minecraftVersion}:${hexcastingVersion}") {
        // If not excluded here, calls a nonexistent method and crashes the dev client
        exclude module: "phosphor"
    }

    modImplementation "at.petra-k.paucal:paucal-fabric-${minecraftVersion}:${paucalVersion}"
    modImplementation "vazkii.patchouli:Patchouli:${minecraftVersion}-${patchouliVersion}-FABRIC"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${cardinalComponentsVersion}"

    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${entityReachVersion}"
    include "com.jamieswhiteshirt:reach-entity-attributes:${entityReachVersion}"

    modImplementation "io.github.tropheusj:serialization-hooks:${serializationHooksVersion}"
    include "io.github.tropheusj:serialization-hooks:${serializationHooksVersion}"

    modImplementation "dev.emi:trinkets:${trinketsVersion}"
}

remapJar {
    injectAccessWidener = true
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = "${project.archivesBaseName}-${project.name}-fabric"
            from components.java
        }
    }
}

publishMods {
    modLoaders.addAll("fabric", "quilt")

    // Uncomment your desired platform(s)
//    curseforge {
//        requires { slug = "fabric-api" }
//        requires { slug = "fabric-language-kotlin" }
//    }
//
//    modrinth {
//        requires { slug = "fabric-api" }
//        requires { slug = "fabric-language-kotlin" }
//    }
}
